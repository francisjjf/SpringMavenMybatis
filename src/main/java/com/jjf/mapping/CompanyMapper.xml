<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jjf.dao.ICompanyDao">

<!-- 
     <cache type="com.jjf.redis.RedisCache"

        eviction="LRU"
        flushInterval="60000"
        size="1024"
        readOnly="true"/>

 -->

	<resultMap id="CompanyResultMap" type="com.jjf.pojo.Company">
		<id property="id" column="c_id" jdbcType="INTEGER" />
		<result property="name" column="c_name" jdbcType="VARCHAR"/>
		<collection property="employees" ofType="com.jjf.pojo.User">
	        <id property="id" column="u_id" jdbcType="INTEGER" />
	        <result property="userName" column="u_user_name" jdbcType="VARCHAR" />
	        <result property="password" column="u_password" jdbcType="VARCHAR" />
	        <result property="age" column="u_age" jdbcType="INTEGER" />
            <association property="city"  resultMap="CityResultMap"></association>
		</collection>
	</resultMap>
	<resultMap id="CityResultMap" type="com.jjf.pojo.City">
	   <result property="id" column="ci_id" jdbcType="VARCHAR" />
	   <result property="name" column="ci_name" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectAll" resultMap="CompanyResultMap" >
		SELECT
		    c.id c_id,
		    c. NAME c_name,
		    u.id u_id,
		    u.user_name u_user_name,
		    u.age u_age,
		    u. PASSWORD u_password,
		    ci. id ci_id,
		    ci. NAME ci_name
		FROM
		    company c,
		    user_t u,
		    city ci
		WHERE
		    u.companyid = c.id
		AND u.cityid = ci.id
	</select>
	
	<!-- 
	<sql id="Base_Column_List">
		id, user_name, password, age
	</sql>
	<select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_t
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_t
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user_t
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.jjf.pojo.User">
		insert into user_t (id, user_name, password,
		age)
		values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.jjf.pojo.User">
		insert into user_t
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="age != null">
				age,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jjf.pojo.User">
		update user_t
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jjf.pojo.User">
		update user_t
		set user_name = #{userName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	 -->
</mapper>